##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
return(hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(hotspot_chunk, "\n")[[1]]
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
df
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
return(trimmed_hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(hotspot_chunk, "\n")[[1]]
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
df
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
head(df)
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
print(length(mutation_string))
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
#mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
head(df)
df[[4]]$raw_data
df[[4]]$v_gene
class(df[[4]]$v_gene)
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
if (mutation_string == "") {next()}
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
#mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
return(sequence_list)
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
head(df)
temp <- bind_rows(df)
head(temp)
head(temp, 20)
head(temp, 20)
head(temp$indexed_contig_id, 20)
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
if (mutation_string == "") {next()}
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data)
#Extract the aa germline identity
mutation_df$aa_germline <- gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
all_mutations_data <- bind_rows(sequence_list)
all_mutations_data$indexed_contig_id <- gsub("(.*)_[0-9]+$", "\\1", all_mutations_data$indexed_contig_id)
setwd("..")
write_csv(all_mutations_data, "detailed_mutation_data.csv")
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
extract_mutation_data <- function(imgt_individual_file_directory) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
if (mutation_string == "") {next()}
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- ifelse(mutation_df$coding_mutation, gsub(".*?; [A-Z]([0-9]+).*", "\\1", mutation_df$raw_data), NA)
#Extract the aa germline identity
mutation_df$aa_germline <- ifelse(mutation_df$coding_mutation, gsub(".*?; ([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data), NA)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
all_mutations_data <- bind_rows(sequence_list)
all_mutations_data$indexed_contig_id <- gsub("(.*)_[0-9]+$", "\\1", all_mutations_data$indexed_contig_id)
setwd("..")
write_csv(all_mutations_data, "detailed_mutation_data.csv")
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
extract_mutation_data <- function(imgt_individual_file_directory, return_df = FALSE) {
##Set working directory for individual files
setwd(imgt_individual_file_directory)
##Get the individual file list
file_list <- list.files(imgt_individual_file_directory)
##Initialize a list with an element for each sequence
sequence_list <- vector("list", length = length(file_list))
names(sequence_list) <- file_list
##Find the hotspot mutations for each individual sequence
for (i in 1:length(file_list)) {
#Read in the individual file
seq <- read_file(file_list[i])
#Pull the hotspot text chunk
hotspot_chunk <- gsub(".*and hotspots motifs\\\n(.*)\\\n+12.*.", "\\1", seq)
trimmed_hotspot_chunk <- gsub("(.)\\\n+$", "\\1", hotspot_chunk)
#Break the chunk into individual mutations
mutation_string <- str_split(trimmed_hotspot_chunk, "\n")[[1]]
if (mutation_string == "") {next()}
#Retain the indexed_contig_id data
mutation_df <- tibble("indexed_contig_id" = c(rep(file_list[i], length(mutation_string))))
#Add a column of the raw data
mutation_df$raw_data <- mutation_string
#Extract the V gene
mutation_df$v_gene <- gsub(".*(IG.*?);.*", "\\1", mutation_df$raw_data)
#Extract the V gene region
mutation_df$mut_region <- gsub("^.*?;(.*?);.*", "\\1", mutation_df$raw_data)
#Extract the nt position of the mutation
mutation_df$nt_position <- gsub(".*[a,c,t,g]([0-9]+)>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Add germline nt identity
mutation_df$nt_germline <- gsub(".*([a,c,t,g])[0-9]+>[a,c,t,g].*", "\\1", mutation_df$raw_data)
#Extract nt mutation identity
mutation_df$nt_mutation <- gsub(".*[a,c,t,g][0-9]+>([a,c,t,g]).*", "\\1", mutation_df$raw_data)
#Determine hotspot mutation status
mutation_df$hotspot_mutation <- grepl("\\[", mutation_df$raw_data)
#If hotspot, extract type
mutation_df$hotspot_type <- ifelse(mutation_df$hotspot_mutation, gsub(".*?\\[([a,c,t,g]+) .*", "\\1", mutation_df$raw_data), NA)
#Determine coding mutation status
mutation_df$coding_mutation <- grepl("\\(", mutation_df$raw_data)
#Extract the aa position of the mutation
mutation_df$aa_position <- ifelse(mutation_df$coding_mutation, gsub(".*?\\,[A-Z]([0-9]+).*", "\\1", mutation_df$raw_data), NA)
#Extract the aa germline identity
mutation_df$aa_germline <- ifelse(mutation_df$coding_mutation, gsub(".*?\\,([A-Z])[0-9]+.*", "\\1", mutation_df$raw_data), NA)
#If coding mutation, add aa_mutation
mutation_df$aa_mutation <- ifelse(mutation_df$coding_mutation, gsub(".*[A-Z][0-9]+>([A-Z]).*", "\\1", mutation_df$raw_data),
NA)
#If coding mutation, extract chemistry change
mutation_df$aa_change_chemistry <- ifelse(mutation_df$coding_mutation, gsub(".*\\((.*)\\).*", "\\1", mutation_df$raw_data),
NA)
mutation_df <- mutation_df %>% select(-raw_data)
mutation_df$nt_position <- as.numeric(mutation_df$nt_position)
sequence_list[[i]] <- mutation_df
}
all_mutations_data <- bind_rows(sequence_list)
all_mutations_data$indexed_contig_id <- gsub("(.*)_[0-9]+$", "\\1", all_mutations_data$indexed_contig_id)
setwd("..")
write_csv(all_mutations_data, "superrseq_processed_detailed_mutation_data.csv")
if (return_df == TRUE) {return(all_mutations_data)}
}
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files")
head(df)
df <- extract_mutation_data("/Users/matt/Desktop/TotalSeq/totalseq_repository/test_data/imgt_vdj_outs/individual_files", return_df = TRUE)
head(df)
print.AsIs(df)
print.AsIs(head(df))
